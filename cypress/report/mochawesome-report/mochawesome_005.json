{
  "stats": {
    "suites": 10,
    "tests": 12,
    "passes": 11,
    "pending": 0,
    "failures": 1,
    "start": "2021-05-21T20:22:29.260Z",
    "end": "2021-05-21T20:22:34.727Z",
    "duration": 5467,
    "testsRegistered": 12,
    "passPercent": 91.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7378a546-d4bd-44ba-8739-441bfc997f17",
      "title": "",
      "fullFile": "cypress/integration/examples/cypress_api.spec.js",
      "file": "cypress/integration/examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6b73cdfc-dacd-4c3e-8e49-cd1472b05dce",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 1570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  // @ts-ignore TS7017\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n}); // @ts-ignore TS2339\ncy.get('button').console('info').then($button => {// subject is still $button\n});",
              "err": {},
              "uuid": "1a7b5c31-40d0-4db7-8f24-3f659817382f",
              "parentUUID": "6b73cdfc-dacd-4c3e-8e49-cd1472b05dce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a7b5c31-40d0-4db7-8f24-3f659817382f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1570,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aae241f0-fa44-4f85-99e9-b374cc87cbda",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "d9544875-cb73-454f-bd94-068caa325b58",
              "parentUUID": "aae241f0-fa44-4f85-99e9-b374cc87cbda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "d5a771af-95f0-4483-8c92-93bdb59e32ea",
              "parentUUID": "aae241f0-fa44-4f85-99e9-b374cc87cbda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "fec19735-4703-4d35-aee5-c383699931fa",
              "parentUUID": "aae241f0-fa44-4f85-99e9-b374cc87cbda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9544875-cb73-454f-bd94-068caa325b58",
            "d5a771af-95f0-4483-8c92-93bdb59e32ea",
            "fec19735-4703-4d35-aee5-c383699931fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 670,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c0ca5f4b-1459-4293-b12e-6d6dc38b7023",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "f53a6c3d-b066-49ba-a9f9-0c894504bbf3",
              "parentUUID": "c0ca5f4b-1459-4293-b12e-6d6dc38b7023",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f53a6c3d-b066-49ba-a9f9-0c894504bbf3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 175,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "55cccd10-ad5e-4f68-ab37-8f9069c601df",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 529,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {
                "message": "AssertionError: expected { Object (defaultCommandTimeout, chromeWebSecurity, ...) } to have property 'defaultCommandTimeout' of 4000, but got 6000",
                "estack": "AssertionError: expected { Object (defaultCommandTimeout, chromeWebSecurity, ...) } to have property 'defaultCommandTimeout' of 4000, but got 6000\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress/integration/examples/cypress_api.spec.js:175:30)",
                "diff": "- 6000\n+ 4000\n"
              },
              "uuid": "395b51b3-5009-4865-8b03-c86c0d835910",
              "parentUUID": "55cccd10-ad5e-4f68-ab37-8f9069c601df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "395b51b3-5009-4865-8b03-c86c0d835910"
          ],
          "pending": [],
          "skipped": [],
          "duration": 529,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a474c0d5-da3a-4b56-98fd-718d5a6a3705",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "f8d3c251-7567-41c1-a62b-04e688a2c2fa",
              "parentUUID": "a474c0d5-da3a-4b56-98fd-718d5a6a3705",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8d3c251-7567-41c1-a62b-04e688a2c2fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 233,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "82ce3b4f-47f4-4e36-a918-2e1d064ed753",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "1ede5eb3-7b3f-4f94-b534-5a30275dc5b7",
              "parentUUID": "82ce3b4f-47f4-4e36-a918-2e1d064ed753",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ede5eb3-7b3f-4f94-b534-5a30275dc5b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 237,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5dc072f6-4016-4bc3-a540-ef1c344e01b1",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "d4eb73bc-8150-465c-88f4-1c266a4d9aae",
              "parentUUID": "5dc072f6-4016-4bc3-a540-ef1c344e01b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4eb73bc-8150-465c-88f4-1c266a4d9aae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 374,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "641effa5-9b98-4979-aca3-0deb26645090",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "6ed9083d-bf8d-47e2-8f8d-a35106e84d25",
              "parentUUID": "641effa5-9b98-4979-aca3-0deb26645090",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ed9083d-bf8d-47e2-8f8d-a35106e84d25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ac149aca-7dff-4ca9-92ca-ca593e8acfa4",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "4838f8db-ea7b-45c9-8749-d41cf1d3b42e",
              "parentUUID": "ac149aca-7dff-4ca9-92ca-ca593e8acfa4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4838f8db-ea7b-45c9-8749-d41cf1d3b42e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 181,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d8eec057-a79c-428e-b935-fafff46c1419",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "db7d4bbf-7e24-444e-b058-b0467665ef08",
              "parentUUID": "d8eec057-a79c-428e-b935-fafff46c1419",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db7d4bbf-7e24-444e-b058-b0467665ef08"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 253,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/report/mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}